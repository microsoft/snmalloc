load("@rules_foreign_cc//foreign_cc:defs.bzl", "cmake")

filegroup(
    name = "srcs",
    srcs = glob(
        [
            "src/snmalloc/**/*",
            "src/test/*.h",
            "CMakeLists.txt",
        ],
    ),
    visibility = ["//visibility:private"],
)

cmake(
    name = "snmalloc",
    cache_entries = {
        "CMAKE_BUILD_TYPE": "Release",
        "CMAKE_INTERPROCEDURAL_OPTIMIZATION": "TRUE",
        "SNMALLOC_OPTIMISE_FOR_CURRENT_MACHINE": "ON",
        "SNMALLOC_USE_SELF_VENDORED_STL": "OFF",
        "SNMALLOC_IPO": "ON",
        "USE_SNMALLOC_STATS": "ON",
    },
    copts = [
        "-fuse-ld=lld",
        "-stdlib=libc++",
        "-mcx16",
        "-Wno-error=unknown-pragmas",
        "-Qunused-arguments",
    ],
    generate_args = ["-G Ninja"],
    lib_source = ":srcs",
    out_headers_only = False,
    out_shared_libs = select({
        "@bazel_tools//src/conditions:darwin": [
            "libsnmallocshim-checks-memcpy-only.dylib",
            "libsnmallocshim-checks.dylib",
            "libsnmallocshim.dylib",
        ],
        "//conditions:default": [],
    }),
    out_static_libs = [
        "libsnmallocshim-static.a",
        "libsnmalloc-new-override.a",
    ],
    postfix_script = "ninja",
    visibility = ["//visibility:public"],
)

cmake(
    name = "snmalloc-rs",
    cache_entries = {
        "CMAKE_BUILD_TYPE": "Release",
        "CMAKE_INTERPROCEDURAL_OPTIMIZATION": "TRUE",
        "SNMALLOC_RUST_SUPPORT": "ON",
        "SNMALLOC_OPTIMISE_FOR_CURRENT_MACHINE": "ON",
        "SNMALLOC_USE_SELF_VENDORED_STL": "OFF",
        "SNMALLOC_IPO": "ON",
        "USE_SNMALLOC_STATS": "ON",
    },
    copts = [
        "-fuse-ld=lld",
        "-stdlib=libc++",
        "-mcx16",
        "-Wno-error=unknown-pragmas",
        "-Qunused-arguments",
    ],
    generate_args = ["-G Ninja"],
    lib_source = ":srcs",
    out_headers_only = False,
    out_shared_libs = select({
        "@bazel_tools//src/conditions:darwin": [
            "libsnmallocshim-checks-memcpy-only.dylib",
            "libsnmallocshim-checks.dylib",
            "libsnmallocshim.dylib",
        ],
        "//conditions:default": [],
    }),
    out_static_libs = [
        "libsnmallocshim-static.a",
        "libsnmalloc-new-override.a",
    ],
    postfix_script = "ninja",
    visibility = ["//visibility:public"],
)
